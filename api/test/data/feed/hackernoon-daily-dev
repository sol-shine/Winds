<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:cc="http://cyber.law.harvard.edu/rss/creativeCommonsRssModule.html">
    <channel>
        <title><![CDATA[Software Development in Hacker Noon on Medium]]></title>
        <description><![CDATA[Latest stories tagged with Software Development in Hacker Noon on Medium]]></description>
        <link>https://hackernoon.com/tagged/software-development?source=rss----3a8144eabfe3--software_development</link>
        <image>
            <url>https://cdn-images-1.medium.com/proxy/1*TGH72Nnw24QL3iV9IOm4VA.png</url>
            <title>Software Development in Hacker Noon on Medium</title>
            <link>https://hackernoon.com/tagged/software-development?source=rss----3a8144eabfe3--software_development</link>
        </image>
        <generator>Medium</generator>
        <lastBuildDate>Wed, 06 Jun 2018 10:22:44 GMT</lastBuildDate>
        <atom:link href="https://medium.com/feed/hacker-daily/tagged/software-development" rel="self" type="application/rss+xml"/>
        <webMaster><![CDATA[yourfriends@medium.com]]></webMaster>
        <item>
            <title><![CDATA[SurveyJS plugin for Wordpress]]></title>
            <link>https://hackernoon.com/surveyjs-plugin-for-wordpress-9f42d9219db0?source=rss----3a8144eabfe3--software_development</link>
            <guid isPermaLink="false">https://medium.com/p/9f42d9219db0</guid>
            <category><![CDATA[wordpress]]></category>
            <category><![CDATA[web-development]]></category>
            <category><![CDATA[surveys]]></category>
            <category><![CDATA[software-development]]></category>
            <category><![CDATA[programming]]></category>
            <dc:creator><![CDATA[SurveyJS News]]></dc:creator>
            <pubDate>Tue, 05 Jun 2018 13:54:13 GMT</pubDate>
            <atom:updated>2018-06-05T14:15:08.561Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/772/1*B2SACtTiN3AT8_C9gNg1QA.png" /></figure><p>We are happy to introduce a new plugin for WordPress — <a href="https://wordpress.org/plugins/surveyjs/">SurveyJS plugin</a>. It will help you create a survey, quiz or form. Add it to any page or post on your WordPress site, collect results, and download them to analyze.</p><p>The plugin is free and is released under the <a href="https://wordpress.org/about/license/">GPLv2</a> WordPress standard license. Registration is not required — simply install and use it. It is based on SureveyJS libraries and uses a full SurveyJS power.</p><h4>Here a short list of <em>SurveyJS features:</em></h4><ul><li>The plugin has 15 elements (questions and panels): from simple inputs like text and a dropdown to Panel containers and a dynamic matrix (table) to build complex forms</li><li>Multi page support</li><li>Localization for many languages and support for multi language surveys/forms (one survey for several languages)</li><li>Control of survey flow: the ability to set visibility expressions for pages, panels, questions, and even individual items in checkboxes, radio groups, and dropdowns</li><li>The ability to fill data for checkboxes, radio groups, and dropdowns from web services</li><li>User input validation with several built-in validators</li><li>The ability to show results in a read-only survey</li><li>Several good-looking themes and much more</li></ul><h4>Powerfull Editor</h4><p>You can build a survey by using a powerful visual editor called SurveyJS Builder. It can create a survey from scratch, customize it, and test your survey before you publish it on your site.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*D74SoTkJ-YpjzXVowYtLxw.png" /><figcaption>SurveyJS Builder</figcaption></figure><h4>How to add a survey to your site</h4><p>After the SurveyJS WordPress plugin is installed, you can open a list of available surveys. Here, create a new survey, open the editor window for any survey, open the survey results window, and delete the survey if you want.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*QmudAE-RgLvkMmurAJLo_Q.png" /></figure><p>Press the “Add Survey” button and the plugin will create a new survey and open it in the survey builder window:</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*3NHb_52N-hWisGtzk5-SWQ.png" /></figure><p>You can easily drag and drop questions from the toolbox on the left side to the design surface and set properties by using the property grid on the right side of inplace editing tools. Each change is immediately saved, and you can undo it via the corresponding button in the top center part of the editor.</p><p>More information about options and settings can be found in the <a href="https://surveyjs.io/Documentation/Builder/">documentation</a>.</p><p>After your survey is designed, we can add it to any page of your site via the “Add Survey” button (Wordpress shortcode) in the Posts section:</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*kj-J6vzqyYmTxo2GKmTARw.png" /></figure><p>You will see your survey in page preview mode and can take it. Voila! We’ve done it!</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*xUgeQga6gLlZVoLsNb33Lg.png" /></figure><p>What about results? — you are asking… The survey results window is available on the surveys list via “Results”:</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*8ejId3k3B0oCDTPaXb6l5w.png" /></figure><p>You can sort results, search against them, and export them in the most popular format.</p><h4>Support, bug fixed and new releases</h4><p><a href="https://github.com/surveyjs/surveyjs">SurveyJS </a>is a popular platform that helps you create surveys, quizzes, and forms in JavaScript. This plugin is a part of Project SurveyJS and will be developed further. In addition to the built-in <a href="https://wordpress.org/support/plugin/surveyjs">Wordpress </a>forum and GitHub issue tracker, you can ask questions in our AnswerDesk web application.</p><p>We are looking forward to your feedback and are working hard to fix bugs you found as soon as possible.</p><figure><a href="https://goo.gl/w4Pbea"><img alt="" src="https://cdn-images-1.medium.com/max/700/1*PZjwR1Nbluff5IMI6Y1T6g@2x.png" /></a></figure><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=9f42d9219db0" width="1" height="1"><hr><p><a href="https://hackernoon.com/surveyjs-plugin-for-wordpress-9f42d9219db0">SurveyJS plugin for Wordpress</a> was originally published in <a href="https://hackernoon.com">Hacker Noon</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How to host a Single Page Application with AWS CloudFront and Lambda@Edge]]></title>
            <link>https://hackernoon.com/how-to-host-a-single-page-application-with-aws-cloudfront-and-lambda-edge-39ce7b036da2?source=rss----3a8144eabfe3--software_development</link>
            <guid isPermaLink="false">https://medium.com/p/39ce7b036da2</guid>
            <category><![CDATA[software-development]]></category>
            <category><![CDATA[cloud-computing]]></category>
            <category><![CDATA[terraform]]></category>
            <category><![CDATA[devops]]></category>
            <category><![CDATA[aws]]></category>
            <dc:creator><![CDATA[Lionel Martin]]></dc:creator>
            <pubDate>Tue, 05 Jun 2018 11:39:47 GMT</pubDate>
            <atom:updated>2018-06-05T17:46:08.407Z</atom:updated>
            <content:encoded><![CDATA[<h4>Configuring CloudFront to support push-state URLs</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/851/1*q4pR9T8PpOTfbQtjV80-VA.jpeg" /></figure><p>This one seems like an easy one, however I’m appalled by how much time can be wasted configuring AWS for static website hosting and there must be a better way:</p><p>— <strong>serverless</strong>: we will be hosting static assets so no messing around with servers for that<br> — <strong>cheap and ultra-performant</strong>: by leveraging AWS CDN, we’ll get world-class global distribution and caching for pennies<br> — <strong>automated</strong>: this is not a tutorial of the AWS console. Some of the marketing agencies I consult for would typically deploy new landing pages or static websites every week. If that’s something you do regularly too, it is worth investing an hour into automating this into a push-button procedure isn’t it?</p><h4>About automating</h4><p>There is something very powerful about automating even the little things. The benefits are much more than the sum of time savings over time, it will reduce human errors, improve the reliability of your service, get your employees busy with higher-value work and boost employee morale by eliminating boring low-value tasks. It improves your business globally.</p><blockquote>A game changer: with Lambda@Edge, we can now configure CloudFront to support <em>push-state URLs</em></blockquote><p>The problem so far with hosting an SPA on CloudFront is that we couldn’t support <em>push-state URLs</em> because CloudFront doesn’t offer a “catch-all” configuration i.e. we couldn’t serve the same index.html file for any request to the domain. The solution was to use hash-state “ugly” urls which was a turn-off for most.</p><p>In 2017, AWS released Lambda@Edge, a service that runs your Lambda functions “at the edge” of the cloud i.e immediately before/after the CDN queries its cache:</p><ul><li><em>viewer request</em>: after CloudFront receives a request from a viewer</li><li><em>origin request</em>: before CloudFront forwards the request to the origin</li><li><em>origin response: </em>after CloudFront receives the response from the origin</li><li><em>viewer response</em>: before CloudFront forwards the response to the viewer</li></ul><figure><img alt="" src="https://cdn-images-1.medium.com/max/638/1*BMFkeiwzlYyIV6YbYwb1QA.jpeg" /></figure><p>This will let us rewrite the requests on <em>origin request</em> so that we always serve index.html for all push-state routes requests. Happy days!</p><iframe src="" width="0" height="0" frameborder="0" scrolling="no"><a href="https://medium.com/media/0e9e9870904305eb72b001527f4aba94/href">https://medium.com/media/0e9e9870904305eb72b001527f4aba94/href</a></iframe><h4>What do I need?</h4><ul><li>an existing domain name registered as a hosted zone in your AWS account</li><li>a wildcard SSL certificate for all subdomains</li><li>terraform and the aws CLI installed and configured on your machine</li><li>a dummy React or Vue application to deploy</li></ul><h4>Show me the Terraform module!</h4><p>I’ve released a Terraform module that does all the heavy lifting for you:</p><p><a href="https://github.com/li0nel/terraform-aws-single-page-application">li0nel/terraform-aws-single-page-application</a></p><p>Copy the example files into your SPA root folder: <br>wget https://raw.githubusercontent.com/li0nel/terraform-aws-single-page-application/master/examples/main.tf<br>wget https://raw.githubusercontent.com/li0nel/terraform-aws-single-page-application/master/examples/outputs.tf<br>wget https://raw.githubusercontent.com/li0nel/terraform-aws-single-page-application/master/examples/terraform.tfvars<br>wget https://raw.githubusercontent.com/li0nel/terraform-aws-single-page-application/master/examples/variables.tf</p><iframe src="" width="0" height="0" frameborder="0" scrolling="no"><a href="https://medium.com/media/d4b3d730d9f3753ca3298a9ea1c71fc2/href">https://medium.com/media/d4b3d730d9f3753ca3298a9ea1c71fc2/href</a></iframe><iframe src="" width="0" height="0" frameborder="0" scrolling="no"><a href="https://medium.com/media/40fbe4ca4ba0819272e6a54bf628f5b5/href">https://medium.com/media/40fbe4ca4ba0819272e6a54bf628f5b5/href</a></iframe><iframe src="" width="0" height="0" frameborder="0" scrolling="no"><a href="https://medium.com/media/5974de9fd15d0a5b961187095a2707c0/href">https://medium.com/media/5974de9fd15d0a5b961187095a2707c0/href</a></iframe><iframe src="" width="0" height="0" frameborder="0" scrolling="no"><a href="https://medium.com/media/c7b508ed3aa9ebaeb40cb3e730ad56a7/href">https://medium.com/media/c7b508ed3aa9ebaeb40cb3e730ad56a7/href</a></iframe><p>Replace the values in terraform.tfvars with your aws CLI profile name, your app name and your domain name. Make sure you have an existing certificate for *.cdn.mydomain.com in the <em>us-east-1</em> region.</p><p>Run terraform init then terraform apply and wait for the S3 bucket, Lambda function and CloudFront distribution to be created:</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*jQNKle-QloQDoQ0kAC1R-Q.png" /></figure><p>You can now compile your front-end assets locally and push them directly to the S3 bucket to deploy your application:</p><p>yarn build &amp;&amp; aws s3 cp --recursive --acl=public-read build/ s3://$(terraform output s3_bucket)</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*dq6UJ_VHWxDF4RfCFA2xTw.png" /></figure><p>An alternative is to use the CodeCommit Git repository and CodePipeline pipeline that has been created by the Terraform module to let AWS build your application, run your tests and deploy on S3.</p><p>Either way, your application is now running on CloudFront!</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*YtdVF3ZdUhnGUCWabcPjLQ.png" /><figcaption>The push-state URL working properly when refreshing the page</figcaption></figure><figure><a href="https://goo.gl/w4Pbea"><img alt="" src="https://cdn-images-1.medium.com/max/700/1*PZjwR1Nbluff5IMI6Y1T6g@2x.png" /></a></figure><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=39ce7b036da2" width="1" height="1"><hr><p><a href="https://hackernoon.com/how-to-host-a-single-page-application-with-aws-cloudfront-and-lambda-edge-39ce7b036da2">How to host a Single Page Application with AWS CloudFront and Lambda@Edge</a> was originally published in <a href="https://hackernoon.com">Hacker Noon</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[From Junior to Senior: The Skills a Back-End Developer Should Learn]]></title>
            <link>https://hackernoon.com/from-junior-to-senior-the-skills-a-back-end-developer-should-learn-cbd077845afd?source=rss----3a8144eabfe3--software_development</link>
            <guid isPermaLink="false">https://medium.com/p/cbd077845afd</guid>
            <category><![CDATA[programming]]></category>
            <category><![CDATA[software-development]]></category>
            <category><![CDATA[software]]></category>
            <category><![CDATA[back-end-developer]]></category>
            <category><![CDATA[from-junior-to-senior]]></category>
            <dc:creator><![CDATA[The Martec]]></dc:creator>
            <pubDate>Tue, 05 Jun 2018 10:06:01 GMT</pubDate>
            <atom:updated>2018-06-05T10:06:01.131Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/proxy/1*b31hiO4ynbDLRrXWEFF4aQ.png" /></figure><p>Are you a junior back-end developer wondering how you can make the next jump in your career?</p><p>Transitioning from junior developer to senior developer can seem daunting at first, but if you know the skills that you need to confidently make the change, you’ll be on your way to a promotion or new job sooner than you might realise.</p><p>What skills might they be? We spoke to industry experts to seek insights on how you can climb the career ladder and get to that next level. For the purpose of simplicity, we’re going to divide this article into two broad skillsets you need — soft skills and hard skills. So, what do you need to learn, and how should you learn it?</p><h3>Soft skills for developers</h3><p><strong>1) Asking for help:</strong> If you’re a junior developer, chances are you’ve got more experienced developers around you at your company, or in the communities that you’re a part of. By asking them about their journey to seniority, you’ll uncover some priceless insights.</p><p><a href="https://medium.com/comparethemarket/a-journey-from-junior-developer-to-technical-lead-b1af4d2419fb">David Boyne, who wrote this amazing article</a> on his journey to becoming a technical lead, suggests that it’s OK to be surrounded by smart people! Don’t let it intimidate you. Find a friendly mentor who can show you the ropes, and you’ll enjoy the journey even more.</p><p><strong>2) Communicating &amp; collaborating:</strong> <a href="https://www.agridigital.io/team/craig-roberge">Craig Roberge</a>, a developer at <a href="https://www.themartec.com/employers/agridigital">AgriDigital</a> who boasts over 16 years of application development experience, says “soft skills are essential for all developers. The ability for a dev team to collaborate and communicate with each other is the foundation for successful project deliveries.”</p><p>This is a timely nugget of advice from Roberge, given that developers can tend to be a little pedantic and defensive about their code. He notes that this can often result in you, the developer, struggling to “be diplomatic with your colleagues.” He says that you must “argue coherently and rationally when you believe your solution to be the best, but always be willing to listen and be polite. Take pride and ownership in your code, but remain calm when things go wrong.” Most developers will know that this is easier said than done!</p><p>Building on this insight, <a href="https://www.linkedin.com/in/joe-ruello-62431182/">Joe Ruello</a>, Engineering Manager at <a href="https://www.themartec.com/employers/hipages">hipages</a> says that “code doesn’t live in a vacuum, and neither should developers. Communication is a vital skill for all developers; whether it be clarifying requirements with your product managers or discussing technical solutions with your colleagues, you need to be able to communicate effectively and clearly to get your ideas across in order to get anywhere in the industry.”</p><p><strong>3) Problem solving:</strong> This may sound like one of those generic skills that every developer needs, but problem solving takes on a whole new meaning at a senior developer level. The higher you go the more complex the issues will get, and advanced problem solving skills become an absolute must to sustain your success at the top.</p><p>Roberge says the “ability to identify problems in advance and identify potential solutions” is key.</p><h3>Hard skills for developers</h3><p>By hard skills we mean your technical skills: gaining knowledge of upcoming technologies, and sharpening your current skill set. Keep in mind that technology evolves rapidly, and the skills we highlight are only an indicator of what a back-end developer might need to stay relevant over the next few years.</p><p><strong>4) Javascript server side languages, functional programming &amp; blockchain:</strong>Roberge feels that you should be trying to get as much experience as possible in both front-end and back-end development. This article we recently published on <a href="https://www.themartec.com/insidelook/functional-programming-what-language">functional programming</a> are a great starting point, while <a href="https://www.themartec.com/insidelook/skills-blockchain-engineer">this one offers up the skills you need to become a blockchain engineer</a>.</p><p><strong>5) Design &amp; back-end architecture:</strong> Ruello of hipages says, “A solid foundation in design patterns and knowledge of general software engineering best practices will take you a long way — these skills translate across languages and teams and will allow you to be an effective contributor on any team or project.</p><p>At a more practical level, proficiency in the language(s) in use by your team, knowledge of SQL and databases such as MySQL and PostgreSQL, knowledge of queues such as RabbitMQ, as well as how to consume an external API, will put you in a good place.”</p><p>Understanding the design concepts for back-end architecture, and the knowledge on building, maintaining and processing all of the data that goes through it, will enable you to see the ‘big picture’ of the back-end, which is critical when you’re a senior developer or technical lead. It’s the only way you can guide and mentor other junior developers working under you.</p><p><strong>6) Keeping up to date with emerging technologies:</strong> Staying relevant is an endless battle in development, and you’ve always got to be looking to learn and progress. A resource like <a href="https://stackoverflow.com/">Stackoverflow</a> can be your best friend, as you’ll be part of a community that’s in the same boat as you, avoiding the risk of <em>coding in isolation</em>.</p><p>Ruello adds, “The days of massive monolithic applications are coming to a close: the industry is moving towards microservice architectures and alternate paradigms such as event sourcing.</p><p>“Knowledge and experience with containerisation and orchestration technologies such as Docker and Kubernetes is becoming more and more relevant and should be in the toolbelt of any back-end developer.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/650/0*Sak0qo1Haaloh1EZ.jpg" /></figure><p>“It is also beneficial to be versatile. Having some basic front-end knowledge under your belt — including modern frameworks like React — will allow you to do more yourself and deliver value at a quicker pace.”</p><p>Clearly, this reiterates how important the functional programming realm is becoming. It’s a whole new philosophy, a new way to code, and the sooner you become familiar with it, the better.</p><h3>To sum up…</h3><p>It’s important that you, as a junior developer, don’t get overwhelmed with all that you need to learn. But at the same time, you need to focus on developing the skills that will allow you to see and understand the back-end big picture. You must also remember that hard skills will only take you so far, and you’ll need softer skills to lead, communicate and collaborate effectively.</p><p>Ruello puts the challenge into perspective: “Back-end development can be a thankless role. Your job is to marshal data across your system in a performant and efficient way. The end user should not be aware of your presence, but you have the satisfaction of knowing that you’re doing the work to bring them the value you’ve promised.”</p><p>So stay true to your purpose as a back-end developer. If this is what you’re meant to do, you’ll have no problem in finding the motivation to overcome any obstacles, or learn any new skills you need to rise through the ranks.</p><p>Ready to ramp up your development career? Australia’s leading tech companies are looking for new talent right now! Check out our <a href="https://www.themartec.com/jobs">latest job listings here.</a></p><figure><a href="https://goo.gl/w4Pbea"><img alt="" src="https://cdn-images-1.medium.com/max/700/1*PZjwR1Nbluff5IMI6Y1T6g@2x.png" /></a></figure><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=cbd077845afd" width="1" height="1"><hr><p><a href="https://hackernoon.com/from-junior-to-senior-the-skills-a-back-end-developer-should-learn-cbd077845afd">From Junior to Senior: The Skills a Back-End Developer Should Learn</a> was originally published in <a href="https://hackernoon.com">Hacker Noon</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[The WWDC 2018 Keynote Chronicles]]></title>
            <link>https://hackernoon.com/the-wwdc-2018-keynote-chronicles-fe97d1a9cee8?source=rss----3a8144eabfe3--software_development</link>
            <guid isPermaLink="false">https://medium.com/p/fe97d1a9cee8</guid>
            <category><![CDATA[wwdc-2018]]></category>
            <category><![CDATA[software]]></category>
            <category><![CDATA[developer]]></category>
            <category><![CDATA[apple]]></category>
            <category><![CDATA[software-development]]></category>
            <dc:creator><![CDATA[Attila Vágó]]></dc:creator>
            <pubDate>Mon, 04 Jun 2018 20:59:23 GMT</pubDate>
            <atom:updated>2018-06-04T21:01:14.806Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*tDiOMNMRhNEO9spJPXru_A.png" /><figcaption>Courtesy of <a href="https://www.apple.com/apple-events/june-2018/">Apple WWDC2018</a></figcaption></figure><p>So, I did this last year and decided to do it this year as well. Less of an Apple fanboy than in 2017, but as a developer and software engineer by trade and passion, I could not stay away from an event that regardless of my latest disappointments in Apple and specifically Tim Cook, does innovate and inspire to some degree.</p><p>Without further ado, here’s what happened today at the <a href="https://www.apple.com/apple-events/june-2018/">keynote event</a> that started with what first seems like a light mockery of developers turning into a somewhat sweet Animal Planet style mini episode about who — us developers — are.</p><iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2Fxp6UCQvKKzI%3Ffeature%3Doembed&amp;url=http%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3Dxp6UCQvKKzI&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2Fxp6UCQvKKzI%2Fhqdefault.jpg&amp;key=d04bfffea46d4aeda930ec88cc64b87c&amp;type=text%2Fhtml&amp;schema=youtube" width="854" height="480" frameborder="0" scrolling="no"><a href="https://medium.com/media/1597d801cf2f516fa9864327a868c9f2/href">https://medium.com/media/1597d801cf2f516fa9864327a868c9f2/href</a></iframe><p>Followed by a running Tim onto the stage as if he just took too much time on the loo and was about to miss his cue. I understand a good morning or evening run, I understand the need for fitness, but running on and off stage, just never made sense to me, only to start with iOS — or better said, <em>with all the things they should have done last year but failed to.</em></p><h3>iOS 12</h3><p>Starting with an iOS vs Android adoption rates report was a bit low and not news at all. Android is getting better and has its merits but fragmentation will forever force it into a lower adoption rate than iOS. This is now a decade long discussion and I still fail to see why.</p><h4>The Interesting News:</h4><ul><li>iOS12 will be available for the same devices that today are capable of running iOS11, in fact iOS12 is supposedly up to 50% (average) faster than iOS11 on an iPhone 6.</li><li>Burst CPU processing model allowing your CPU to instantly ramp up and down when required. Power saving expected as well.</li><li>Shareable AR <a href="https://www.macrumors.com/2018/06/04/apple-announces-usdz-file-format/">.usdz format</a> available, and will be used natively by Adobe Creative Cloud as well — this could be interesting and occasionally useful.</li><li>A new app called Measure which can measure in 3D. Very cool and immensely useful!</li><li>Siri shortcuts to app actions, which basically means you’ll be able to automate a bunch of things, set a trigger call for Spotify and other previously unavailable things via Siri.</li><li>Refocus on how you use phone and tablet. Do not disturb at night with no notifications, and additional options added to set for how long you don’t want to be disturbed. Also in each notification you can fine-tune how often and when you want to see them.</li><li>Speaking of, here come group notifications — finally!</li><li>Screen-time control with great insight into how you use your device and control it based on reporting on how you use your phone or tablet which is particularly useful for kids as it allows for allowance so they spend a max set amount of time on an app per app basis.</li><li>Another “about time” feature is group face-time of up to 32 people — a demo of which was definitely <em>“not rehearsed”</em> …</li></ul><h4>The Boring News</h4><ul><li>ArKit2 is coming — ok, fine, moving on.</li><li>Multiuser augmented reality — happy with regular reality, sometimes even that’s too much.</li><li>ArKit Lego physical and digital combined play experience of up to 4 users. LegoArExperiences on the app store later. Will take a physical set of Lego over anything digital!</li><li>Photos search is now better with added refinements and suggestions.</li><li>New tab called “foryou”: loops, on this day, sharing activity suggestions based on face recognition while your friend gets a reverse sharing option, all private, on device.</li><li>News gets a “browse” tab, and a sidebar. Wow!</li><li>New stocks app with apple news built in. Some cross-pollination right there…</li><li>Voice Memos app.</li><li>iBooks gets a new design and is now called Apple Books — rebranding at its finest!</li><li>CarPlay third party navigation is allowed now — finally admitting you need more than Apple Maps to get to your destination?</li><li>Animoji with tongue detection — what the actual fudge?!?</li><li>Memoji — create your own animoji because your face is just not good enough anymore… :/</li></ul><h3>Watch OS5</h3><p>This one I really cannot get excited about. While I am a huge fan of smart watches, I fail to understand how a time-piece that requires daily charging is considered as Apple put it <em>“number one in customer satisfaction every year”. </em>Clearly, these customers have not tried any other smart watch out there. And no, I don’t mean FitBit bracelets.</p><h4>The Irrelevant (to me) News</h4><ul><li>Competition challenges between friends — basically who can close the rings faster.</li><li>Added Yoga activity type and hiking activity type.</li><li>Pace alerts and cadence reports.</li><li>Automatic workout detection — my Garmin does that already.</li><li>Walkie talkie app for <em>“a fun easy way to talk”</em>, using watch to watch connection.</li><li>Siri shortcuts available just like on iOS.</li><li>Third party apps on Siri watch-face.</li><li>You no longer need to say <em>“hey Siri”</em>, just raise your arm and talk to it.</li><li>Interactive notifications.</li><li>Web content in mail or messages with webkit — so this might send web designers and developers into a frenzy of <em>“developing watch-first sites”</em>.</li><li>Podcasts app on the watch. Meh.</li></ul><p>The best bit was the demo with a lady on a stationary bike pretending to do a workout session and then her daughter talking to her on the watch yelling #mommyforthewin For the love of everything that’s holy, can these things get any more awkward and cheesy?</p><h3>AppleTV 4K tvOS</h3><p>The AppleTV in my view is one of the most underrated devices on the market today. I have both the 4 and the 4K and they are absolutely brilliant devices at a low-low cost of under $200. For what they are and what they can do, that’s a bargain.</p><h4>Just News …</h4><ul><li>iTunes has now the largest collection of 4k HDR movies which while impressive I wouldn’t really write home about. Other providers will catch up quite quickly.</li><li>Dolby Atmos — which as far as I remember was last year’s news, but on that note, iTunes now has the largest Dolby Atmos collection, and comes as a free upgrade on supported titles. Thanks, I guess.</li><li>Live sports and news in a few countries, so again, don’t hold your breath.</li><li>New aerial screensaver location: earth from space — probably the coolest update to be honest.</li></ul><h3>MacOS Mojave</h3><p>I am pretty sure I’ll end up calling it <em>“Mojito”</em> instead, because this “Mojabi” something just doesn’t roll off the tongue.</p><h4>The Exciting News</h4><ul><li>Dark mode, which looks<em> “bitchin’”</em>! xCode gets dark mode too.</li><li>Dynamic desktop that reflects the time of day — might be a gimmick but still cool.</li><li>Desktop stacks for clean desktop — this is very welcome as it cleans up the desktop automatically. Brilliant!</li><li>Finder gets a new view called gallery view with file details bar and quick actions. Quite useful.</li><li>Quick look gets better with markup and quick actions. Just as useful as the above.</li><li>Screenshots with tools now and options, also very useful.</li><li>Safari shuts down cookie based tracking. Die cookies, die!</li></ul><h4>Not So Exciting News</h4><ul><li>Continuity camera able to take pictures and scan documents via your mobile device — I never used this continuity thing.</li><li>News app coming to mac, Stocks as well. Same for Voice Memos and Home app.</li><li>Better privacy for camera and microphone.</li><li>Safari is killing fingerprinting for tracking purposes so basically your Mac will look to an outside corporation or hacker a lot like many other macs, making it hard(er) to identify you.</li><li>Redesigned mac app store with themed tabs and recommendations, tips and tricks. Work, play and develop tabs added.</li><li>Ratings and review API for developers.</li></ul><p>Well, I guess that’s kind of it. With MacOS the focus seems to have shifted to making the Mac a productivity machine more than just a design statement, which is very welcome and hugely necessary for professionals.</p><p>Most of this stuff available this fall. Over and out.</p><iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FNq6ZqgozPF8%3Ffeature%3Doembed&amp;url=http%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DNq6ZqgozPF8&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FNq6ZqgozPF8%2Fhqdefault.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=youtube" width="854" height="480" frameborder="0" scrolling="no"><a href="https://medium.com/media/af22511457ac699995748205a0cb1c0d/href">https://medium.com/media/af22511457ac699995748205a0cb1c0d/href</a></iframe><p><strong>Attila Vago</strong> — <em>writer of codes, blogs and things that live on the web. Programming polyglot, pragmatic doer, member of the “taking care of business” crowd, with a no nonsense attitude. An easily inspired inspirational individual with a strong predilection towards most things nerdy, good, carnivorous food, and Lego. Uses a Mac. Exercises at 6 a.m.</em></p><p><a href="https://hackernoon.com/coding-has-become-a-pop-culture-939100f84b0c"><strong>HackerNoon</strong></a><strong> and </strong><a href="https://www.quora.com/profile/Attila-V%C3%A1g%C3%B3"><strong>Quora</strong></a><strong> author.</strong></p><figure><a href="https://goo.gl/w4Pbea"><img alt="" src="https://cdn-images-1.medium.com/max/700/1*PZjwR1Nbluff5IMI6Y1T6g@2x.png" /></a></figure><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=fe97d1a9cee8" width="1" height="1"><hr><p><a href="https://hackernoon.com/the-wwdc-2018-keynote-chronicles-fe97d1a9cee8">The WWDC 2018 Keynote Chronicles</a> was originally published in <a href="https://hackernoon.com">Hacker Noon</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Five Quick Thoughts on Microsoft + Github]]></title>
            <link>https://hackernoon.com/five-quick-thoughts-on-microsoft-github-b3563722e856?source=rss----3a8144eabfe3--software_development</link>
            <guid isPermaLink="false">https://medium.com/p/b3563722e856</guid>
            <category><![CDATA[startup]]></category>
            <category><![CDATA[open-source]]></category>
            <category><![CDATA[venture-capital]]></category>
            <category><![CDATA[tech]]></category>
            <category><![CDATA[software-development]]></category>
            <dc:creator><![CDATA[Founder Collective]]></dc:creator>
            <pubDate>Mon, 04 Jun 2018 20:43:36 GMT</pubDate>
            <atom:updated>2018-06-04T21:08:13.797Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/920/1*wwAf3Qqg1nBjm9ybsJh5Pg.jpeg" /><figcaption><em>Image: </em><a href="https://www.theverge.com/2018/6/4/17422788/microsoft-github-acquisition-official-deal"><em>The Verge</em></a></figcaption></figure><p><em>By </em><a href="https://twitter.com/josephflaherty"><em>Joseph Flaherty</em></a></p><p><a href="https://techcrunch.com/2018/06/04/microsoft-has-acquired-github-for-7-5b-in-microsoft-stock/">Microsoft is acquiring GitHub for $7.5B</a> in stock. What does it mean for the tech ecosystem and startups? Here are a few quick thoughts:</p><h3><strong>1. From Creepers to Coders to CEOs</strong></h3><p>The first coding project of a precocious programmer starting out today will almost certainly be a Minecraft mod. Once this engineer is ready to graduate from brick-based biomes, a GitHub profile is a natural landing place. After this up and coming engineer has mastered MongoDB, they might be tempted by management and the lure of LinkedIn. It’s not an entirely clear story, yet, but Microsoft is stitching together an exciting series of assets that stretch from Kindergarten to the corner office.</p><h3><strong>2. Is Microsoft using Apple’s 2001 playbook?</strong></h3><p>Apple’s renaissance in the early aughts is usually attributed to the stylish iMac and the revolutionary clickwheel of the first-gen iPod, but many forget, or underestimate, how important the release of a<a href="https://www.macworld.co.uk/feature/apple/why-programmers-think-mac-os-x-is-best-os-use-3638706/"> Unix-based OSX</a> was in gaining share with the developer community. These developers were the “alpha geeks,” evangelized to the tech masses, and stocked the iOS app store in the early years.</p><p>Is Microsoft trying to run that playbook? As Apple and Google jockey to bridge the gap between office and home, as Microsoft did in the 1990s, Microsoft is doubling down on productivity and tools. Perhaps <em>Karate Kid</em> reboots, and partnerships with Steven Spielberg will distract Google and Apple from the boring business of software, giving Microsoft an entre to reassert itself?</p><h3><strong>3. Will a startup fill GitHub’s void? Or are network effects too powerful?</strong></h3><figure><img alt="" src="https://cdn-images-1.medium.com/max/801/0*xNqBJjwP84Wwsml_" /></figure><p>GitHub competitor GitLab saw a<a href="https://monitor.gitlab.net/dashboard/db/github-importer?orgId=1"> massive surge in project imports</a> when the acquisition news broke over the weekend, but does this represent a real developer revolt or merely an act of protest that will be nullified by superior network effects? What’s the over/under on crypto-backed replacements that will seek to fill the void in the coming weeks?</p><h3><strong>4. Don’t fight the last war</strong></h3><p>Many predicted Apple would “lose” mobile to the more open Android alternative, based on how the Mac vs. PC battle played out. It seems like a similar line of thinking is at play here, that Microsoft is doomed to destroy what makes GitHub so unique. Here’s a good example of this thinking:</p><style>body[data-twttr-rendered="true"] {background-color: transparent;}.twitter-tweet {margin: auto !important;}</style><blockquote class="twitter-tweet" data-conversation="none" data-align="center" data-dnt="true"><p>I guess that&#39;s probably the best thing that can be said about GitHub losing its independence! IT COULD HAVE BEEN WORSE THAT MICROSOFT 😬 <a rel="nofollow" href="https://t.co/SbEEpDdMuO">https://t.co/SbEEpDdMuO</a></p><p>&#x200a;&mdash;&#x200a;<a href="https://twitter.com/dhh/status/1003615162866241536">@dhh</a></p></blockquote><script src="//platform.twitter.com/widgets.js" charset="utf-8"></script><script>function notifyResize(height) {height = height ? height : document.documentElement.offsetHeight; var resized = false; if (window.donkey && donkey.resize) {donkey.resize(height); resized = true;}if (parent && parent._resizeIframe) {var obj = {iframe: window.frameElement, height: height}; parent._resizeIframe(obj); resized = true;}if (window.location && window.location.hash === "#amp=1" && window.parent && window.parent.postMessage) {window.parent.postMessage({sentinel: "amp", type: "embed-size", height: height}, "*");}if (window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers.resize) {window.webkit.messageHandlers.resize.postMessage(height); resized = true;}return resized;}twttr.events.bind('rendered', function (event) {notifyResize();}); twttr.events.bind('resize', function (event) {notifyResize();});</script><script>if (parent && parent._resizeIframe) {var maxWidth = parseInt(window.frameElement.getAttribute("width")); if ( 500  < maxWidth) {window.frameElement.setAttribute("width", "500");}}</script><p>It’s a fair concern, but I wouldn’t be so sure. Under CEO Satya Nadella Microsoft has shed many, if not most, of its bad practices from the Gates/Ballmer era. Despite its impressive balance sheet, Microsoft is arguably in fourth place among elite developers in mindshare and tool usage.</p><p>Almost all elite developers use Apple hardware, and iOS is the key to the global software market. Gmail and Docs are preferred over the Office Suite and addressing Android is a must. After iOS, AWS are the three most important letters in tech.</p><p>Moreover, each of these companies has taken a substantial PR hit among developers over the last few years. Apple’s diminishing reputation for quality and continued hostility to developers irks many. Google is building killer drones for the government and selling personal data to the highest bidder, both of which turn-offs for sizeable segments of developers. Amazon is eating everything. All the while, Microsoft minds its business, quietly selling software and services, and unbelievably to someone who lived through the 1990s, is the underdog. I wouldn’t be surprised to see the narrative around Redmond to change dramatically.</p><h3><strong>5. Efficient entrepreneurship pays</strong></h3><p>Github raised<a href="https://www.crunchbase.com/organization/github#section-locked-marketplace"> $350M in VC</a>, which is a lot of capital, but the founders put off taking investment for the company’s first four years, until they had built substantial value. I haven’t seen the most recent cap table, but that decision to put off raising will likely make the founders billionaires. The lesson? Patience pays dividends.</p><h4><strong>What’s next?</strong></h4><p>Open Source emerged as a reaction to the Microsoft hegemon in the 90s, now Microsoft is the owner of one of the biggest Open Source communities. Imagine explaining this headline to a techie who went into a coma in 1997. So what’s next?</p><p>A merger with Adobe and/or an acquisition of Sketch/InVision to make a play for the creative class that Apple is paying less and less attention to? Will Microsoft use it’s Xbox franchise and the Hololens to compete on the entertainment front? There are more questions than answers at this point, but for the first time in a long time, Microsoft is <em>interesting</em>.</p><iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fupscri.be%2Fa3718a%3Fas_embed%3Dtrue&amp;url=https%3A%2F%2Fupscri.be%2Fa3718a%2F&amp;image=https%3A%2F%2Fupscri.be%2Fmedia%2Fform.jpg&amp;key=d04bfffea46d4aeda930ec88cc64b87c&amp;type=text%2Fhtml&amp;schema=upscri" width="800" height="400" frameborder="0" scrolling="no"><a href="https://medium.com/media/6310c752c22e38ea951febe6ae89b77e/href">https://medium.com/media/6310c752c22e38ea951febe6ae89b77e/href</a></iframe><figure><a href="https://goo.gl/w4Pbea"><img alt="" src="https://cdn-images-1.medium.com/max/700/1*PZjwR1Nbluff5IMI6Y1T6g@2x.png" /></a></figure><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=b3563722e856" width="1" height="1"><hr><p><a href="https://hackernoon.com/five-quick-thoughts-on-microsoft-github-b3563722e856">Five Quick Thoughts on Microsoft + Github</a> was originally published in <a href="https://hackernoon.com">Hacker Noon</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Deploying GitLab Review Apps with Terraform]]></title>
            <link>https://hackernoon.com/using-terraform-for-gitlab-review-apps-acf05920a264?source=rss----3a8144eabfe3--software_development</link>
            <guid isPermaLink="false">https://medium.com/p/acf05920a264</guid>
            <category><![CDATA[devops]]></category>
            <category><![CDATA[tech]]></category>
            <category><![CDATA[software-development]]></category>
            <category><![CDATA[technology]]></category>
            <category><![CDATA[cloud-computing]]></category>
            <dc:creator><![CDATA[Jared Ready]]></dc:creator>
            <pubDate>Thu, 31 May 2018 00:52:01 GMT</pubDate>
            <atom:updated>2018-06-04T18:15:01.491Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*1FP2DrlfcZpqdn5kqwtHww.png" /></figure><p><a href="https://docs.gitlab.com/ee/ci/review_apps/">GitLab Review Apps</a> are a convenient way of managing dynamic environments for the purpose of reviewing changes before merging into your main branch. GitLab has great Kubernetes support and can easily deploy to your clusters, but if your application is not nicely containerized or your team is not ready to take on Kubernetes, what do you do? You Terraform!</p><h3>Terraform</h3><p><a href="https://www.terraform.io">Terraform</a> is an excellent cloud-agnostic tool for developing your infrastructure as code. By combining a couple features of Terraform, we can pretty easily build a system for deploying Review Apps.</p><h4>1. Workspaces</h4><p><a href="https://www.terraform.io/docs/state/workspaces.html">Workspaces</a> provide a way of provisioning and managing multiple sets of identical infrastructure without copying Terraform configuration files. If you are familiar with Terraform and its .tfstate files, you can think of Workspaces as creating and managing new arbitrarily named .tfstate files.</p><p>For example, terraform workspace new $BRANCH creates a new Workspace which is named with the value of the environment variable $BRANCH. This creates a new blank .tfstate, meaning a terraform apply will provision a new set of resources that are managed independently of any resources managed by any other workspace.</p><h4>2. Remote State</h4><p><a href="https://www.terraform.io/docs/state/remote.html">Remote State</a> is a way to persist Terraform state across multiple machines by storing .tfstate files in one of several supported remote storage mechanisms, such as Amazon S3. While this is most commonly used to allow people to collaboratively work on infrastructure, it can easily be used within GitLab jobs to provision and keep track of infrastructure managed by Terraform.</p><p>The key here is that Remote State persists Workspaces, allowing GitLab CI/CD to reference the Workspaces created for each branch across different jobs that will be ran at different times from different machines.</p><h3>GitLab CI/CD</h3><p>The .gitlab-ci.yml configuration for this is pretty straightforward, but there are a few key points.</p><iframe src="" width="0" height="0" frameborder="0" scrolling="no"><a href="https://medium.com/media/2236d35f52019356bc8fabdf527870cb/href">https://medium.com/media/2236d35f52019356bc8fabdf527870cb/href</a></iframe><p>There are three important pieces of configuration here, all within the environment block.</p><ol><li>name is the dynamically built name of the environment itself. In this case it is based on the the CI_COMMIT_REF_SLUG variable which is the URL-friendly representation of the branch name.</li><li>url is the URL that GitLab associates to the environment. Note that GitLab does not create the DNS record for this, it is up to you to create it.</li><li>on_stop tells GitLab which job should be triggered when the branch is closed or the environment is manually stopped, thus finishing off what makes this a <em>Review App</em> and not just a dynamically named environment.</li></ol><p>The script portion of the configuration is where Terraform comes in.</p><p>We need to store the Terraform configuration outside of this repository because we need the configuration files to be available after the branch is closed.</p><p>Referencing a particular Git tag when cloning this repository is necessary to ensure that the infrastructure used to provision these applications does not change without you knowing.</p><p>As mentioned earlier, Terraform Workspaces is one of the big features that makes Review Apps with Terraform possible. We can define the infrastructure required to run the application and then use <em>Workspaces</em> to manage isolated copies of this infrastructure.</p><pre>terraform workspace select $CI_COMMIT_REF_SLUG || terraform workspace new $CI_COMMIT_REF_SLUG</pre><p>Here we are selecting the Workspace named with the value of $CI_COMMIT_REF_SLUG or we are creating it if it does not exist. This ensures that we can run the the StartReview job multiple times from a single branch without having issues.</p><p>The rest of the script is a standard terraform apply followed by some CodeDeploy specific stuff. I am not going into deployment specifics in this article since there are many tools for doing it, but if you are interested in setting up CodeDeploy <a href="https://hackernoon.com/deploy-to-ec2-with-aws-codedeploy-from-bitbucket-pipelines-4f403e96d50c">I have written about it in the past</a>.</p><p>The StopReview job is very similar to StartReview.</p><iframe src="" width="0" height="0" frameborder="0" scrolling="no"><a href="https://medium.com/media/21f8d8c687c0239279961904d6f81b56/href">https://medium.com/media/21f8d8c687c0239279961904d6f81b56/href</a></iframe><p>The GIT_STRATEGY environment variable set to none makes sure that GitLab does not try to clone the branch when running this job. This is necessary because this job may be ran after the branch is closed, and thus with nothing to clone.</p><p>The combination of action: stop and the name property is what tells GitLab which environment this job is meant to stop. The name here needs to match the name set in StartReview.</p><p>Getting to the script, we again clone the Terraform repository with the same tag used earlier.</p><p>We select the Terraform Workspace corresponding to this branch (it will already be created if we are running this job) and run terraform destroy -auto-approve to de-provision the infrastructure that was created for this branch’s Review App.</p><p>To clean everything up, we then switch the default Workspace and delete the Workspace we created for this branch. Terraform does not let you delete the currently selected Workspace, which is why we need to switch back to default.</p><p>At this point you should have infrastructure that can be provisioned at will dynamically based on branch name and then destroyed either at will or automatically when the branch is closed. Integrating your deployment tool of choice on top of this will give you fully functional Review Apps with their own infrastructure even if your application is not ready for Kubernetes.</p><p>Follow <a href="https://medium.com/u/bc152e4dcd63">Jared Ready</a> for more DevOps goodness!</p><p>👏 if you enjoyed the read!</p><figure><a href="https://goo.gl/w4Pbea"><img alt="" src="https://cdn-images-1.medium.com/max/700/1*PZjwR1Nbluff5IMI6Y1T6g@2x.png" /></a></figure><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=acf05920a264" width="1" height="1"><hr><p><a href="https://hackernoon.com/using-terraform-for-gitlab-review-apps-acf05920a264">Deploying GitLab Review Apps with Terraform</a> was originally published in <a href="https://hackernoon.com">Hacker Noon</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Bitcoin and Software Reliability]]></title>
            <link>https://hackernoon.com/bitcoin-and-software-reliability-d681367a49b2?source=rss----3a8144eabfe3--software_development</link>
            <guid isPermaLink="false">https://medium.com/p/d681367a49b2</guid>
            <category><![CDATA[bitcoin]]></category>
            <category><![CDATA[safety]]></category>
            <category><![CDATA[c-programming]]></category>
            <category><![CDATA[software-reliability]]></category>
            <category><![CDATA[software-development]]></category>
            <dc:creator><![CDATA[Beautyon]]></dc:creator>
            <pubDate>Mon, 04 Jun 2018 10:41:54 GMT</pubDate>
            <atom:updated>2018-06-04T17:14:12.953Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*sx7sClicE9pxM0VdUXhCBQ.jpeg" /></figure><p>A small group of disgruntled people who feel left out of Bitcoin’s meteoric rise complain that Bitcoin’s developers add new features to its basic tool kit “too slowly”, and that innovation on it has stagnated. It is not true that Bitcoin is stagnating. Bitcoin is the fundamental backbone of the missing infallible payments layer of the Internet. In order for it to be infallible and totally reliable, there is only one possible approach to maintaining and extending the software that governs it.</p><p>The mindset and approach needed is not many quick iterations and “break things” mentality; instead, what is needed is the thinking behind super high uptime software, where methodical, slow, evidence-based improvement cycles are employed, and where features are added only when it is proven that stability, compatibility and integrity are absolutely guaranteed.</p><p>This is not a new approach in software. Mission-critical systems and applications where life and death are at stake opt for vendors who are very conservative and focussed on stability and reliability.</p><p><a href="http://www.ghs.com/products/rtos/integrity.html#max">INTEGRITY Real-time Operating System</a></p><p>These systems have <a href="https://en.wikipedia.org/wiki/Uptime">uptimes</a> (the amount of time a system is available without interruption) measured in years. <a href="https://twitter.com/RyanDippmann/status/1003547928642777088?s=20">Visa’s recent downtime</a> shows they are not running systems built to this high and exacting standard, and Bitcoin shows that it <em>is</em> built to this standard, with its uninterrupted, infallible and continuous service measured in years.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*v49yWR4bSNyug8FR1dTp-A.png" /></figure><p>Bitcoin isn’t an operating system, but the principles of fault tolerance and careful extension apply nonetheless. The “To the Moon” meme provides a useful context. NASA’s software fault tolerance requirements are very strict. When astronauts are involved, their lives are at stake. “Break stuff” in that context means “Kill People”. The software simply <strong><em>must</em></strong><em> work every time</em>, no compromise, no guesswork, no exceptions. There are no “do overs” or roll-backs. Guaranteed performance is possible in software, because everything about the systems, including the hardware, can be known in advance and thoroughly tested.</p><iframe src="https://drive.google.com/viewerng/viewer?url=https%3A//ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/19950018573.pdf&amp;embedded=true" width="600" height="780" frameborder="0" scrolling="no"><a href="https://medium.com/media/affdf150abef2dd89813b083c7fa1906/href">https://medium.com/media/affdf150abef2dd89813b083c7fa1906/href</a></iframe><p>High fault tolerance software development has been going on for decades. It is a very well understood discipline, and the practices, methods and mentality are also established and known to work. This is why regular satellite launches work exactly as expected every time. People take them for granted, but there is a culture behind the processes that make regular flawless space launches possible that needs to be applied to Bitcoin, if it is to serve everyone as is hoped. It is not unreasonable to expect Bitcoin to never have an error in its operation. This expectation is already understood to be achievable in Air Traffic Control systems, where once again, lives are at stake.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/976/1*910hfbimSSalGpVVl5AQgQ.png" /><figcaption><a href="https://shemesh.larc.nasa.gov/fm/fm-atm.html">https://shemesh.larc.nasa.gov/fm/fm-atm.html</a></figcaption></figure><p>With Bitcoin, lives and money are at stake. Interruption of its service can cause a cascade of losses and unintended consequences for potentially millions of people and billions of fiat dollars. If it is possible to build a Bitcoin that cannot fail, that should be the goal, and no compromise should be acceptable. It is also clearly possible that a distributed Bitcoin with that characteristic can exist. Bitcoin can be absolutely fault free and distributed at the same time; in fact, any centralization of Bitcoin into data centres increases the probability of critical faults. For certain, there is a math function to describe this. Can you write it out? The exam question would be something along the lines of,</p><p><em>“If Bitcoin is run from a single data centre and that data centre goes off-line, Bitcoin goes down. If Bitcoin is in two data centres and one of them goes off-line, Bitcoin stays up. Describe a function that explains this, showing the number of data centres in relation to the probability of Bitcoin going down, where going down means Bitcoin is totally inoperable. Extra marks for providing a graph of the function.”</em></p><p>Bitcoin is not a social network or chat app. It is a mission-critical software project that has greater integrity than any financial software project in history, in both senses of the word “integrity”. It never goes down, is always available, and is absolutely predictable. All other projects next to it pale in comparison. It is a solid foundation to build against — more solid, in fact, than the operating systems used to build the services that take advantage of it.</p><p>The vast majority of tool builders are not held to the standards that NASA and Mission-Critical, High Availability systems are held to; it is a special discipline that most people are unaware of. Participants who are not even software developers at all have <em>no clue</em> about this specialist field, let alone the expert field of software that isn’t life or death fault tolerant itself; that field is two times removed from them, and is not a part of their thinking at all.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*MGd_XLO0p0P23H4E2mLclA.jpeg" /><figcaption><a href="https://en.wikipedia.org/wiki/Cherenkov_radiation">Cherenkov Radiation</a> in a Nuclear Reactor. TOXIC!</figcaption></figure><p>The more you look at what Bitcoin has achieved, how specialised its disciplines and requirements are, the number of things outside the software realm that constrain its operation (like the speed of light) the more you’re astonished that it has even happened, and the more you want to stay as far away as you can possibly get from its inner workings…if you are sane. This doesn’t mean that you can’t build on Bitcoin as an ordinary developer; on the contrary, its APIs are easy to understand and build against. What you cannot do, however, is enter the “radiation zone” where unseen problems can literally irradiate and kill you. The speed of light is a perfect example.</p><p>There is an upper limit to the block size beyond which the Bitcoin network cannot stay in sync. Because it takes time for data to move across the network, the speed of light is a limiting factor. You can’t have blocks of a size that are beyond that limit, <em>and</em> have Bitcoin as a distributed network. The obvious question is, <em>“what is that magic block size number?”.</em> It is certainly a function of the fastest possible network transmission speed, which is very much slower than the speed of light in air. Normal fibre optic cable transmits light at one third the speed of light, which suggests another exam question,</p><p><em>“Calculate the largest theoretical block size the Bitcoin network can manage and maintain a distributed peer structure if it were running on a perfect fibre optic network where the connections between all nodes run at half the speed of light, over a geographic area the size of the Earth. Any node on the network must be a maximum of one microsecond behind any other node at any time during normal Bitcoin operation.”</em></p><p>This is the sort of question big blockers don’t ask and don’t have the math to answer. New <a href="https://www.extremetech.com/computing/151498-researchers-create-fiber-network-that-operates-at-99-7-speed-of-light-smashes-speed-and-latency-records">ultra-thin photonic-bandgap rim, mode division multiplexing fibre optic cable</a> can transmit light at 99.7% of c, but it will take decades to replace all the “slow” fibre optic cable globally. For now, Bitcoin <em>must</em> operate within the constraints we have today. This matter of speed constraints is a question High-Frequency Traders have already posed, and found a solution to; <a href="http://www.datacenterknowledge.com/archives/2010/12/14/speed-of-light-constrains-high-speed-traders">put everything in one data centre</a>:</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*okGoy75T-m4jCLQvnL-X9g.png" /></figure><p>This means that traders who are competing against each other buy rack space in specialist data centres where their <a href="https://www.urbandictionary.com/define.php?term=boxen"><em>boxen</em></a> can execute trades with the equipment of other traders. This is not acceptable for Bitcoin, obviously, because it exists outside of the State and its regulations. High-speed trading data centres are all “compliant” and regulated. Bitcoin is not regulable. It can never exist in a data centre without losing its <em>force of nature</em> characteristic. This is not to say that Bitcoin is in opposition to anything; the rain, wind and snow are not in opposition to crops, roads or your vacation; they simply <strong>are</strong>, just as Bitcoin <strong>is</strong>. Putting Bitcoin in a data centre is like trying to put lightning in a <a href="https://en.wikipedia.org/wiki/Leyden_jar">Leyden Jar</a>. It isn’t lightning any more, but <em>static electricity</em>.</p><p>Decades from now, when fibre optic cable runs at near-lightspeed it may be possible to increase the block size, and do other things that take advantage of the inevitable improvements in hardware and software. Certainly, as Bitcoin unleashes the forces of the free market, these innovations will come faster than they would have under the fiat currency fueled State. For now, however, Bitcoin must exist inside the constraints imposed by today’s technology. And it will be enough to change everything.</p><p><em>Tappas for six, 4 bottles of Moreneta Blonde, jug of sangria, fresh lemonade. </em>↴</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/260/1*RHdZ8e6R_C_OggltorPV4Q.png" /></figure><figure><a href="https://goo.gl/w4Pbea"><img alt="" src="https://cdn-images-1.medium.com/max/700/1*PZjwR1Nbluff5IMI6Y1T6g@2x.png" /></a></figure><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=d681367a49b2" width="1" height="1"><hr><p><a href="https://hackernoon.com/bitcoin-and-software-reliability-d681367a49b2">Bitcoin and Software Reliability</a> was originally published in <a href="https://hackernoon.com">Hacker Noon</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Keep passwords and secrets out of your logs with Go]]></title>
            <link>https://hackernoon.com/keep-passwords-and-secrets-out-of-your-logs-with-go-a2294a9546ce?source=rss----3a8144eabfe3--software_development</link>
            <guid isPermaLink="false">https://medium.com/p/a2294a9546ce</guid>
            <category><![CDATA[security]]></category>
            <category><![CDATA[passwords]]></category>
            <category><![CDATA[privacy]]></category>
            <category><![CDATA[golang]]></category>
            <category><![CDATA[software-development]]></category>
            <dc:creator><![CDATA[Travis Jeffery]]></dc:creator>
            <pubDate>Mon, 04 Jun 2018 15:56:01 GMT</pubDate>
            <atom:updated>2018-06-04T21:25:37.059Z</atom:updated>
            <content:encoded><![CDATA[<p>When working with distributed systems generally the more logs, the better — the complication lies in being liberal for visibility while being conservative to keep sensitive information private and secure. It’s not easy, just ask GitHub and Twitter who found themselves logging raw passwords recently.</p><p>The details of GitHub’s and Twitter’s incidents weren’t made public but I’d guess an engineer changed a log level config or logged the request bodies without realizing the consequences.</p><p>The fact is this is the reality of the job — with complex systems like these no one can know the consequences of every change, especially so with the fast tech turnover rate. If we’re gonna solve problems like these we need to go deeper.</p><p>Issues like this arise by Murphy’s law: whatever can go wrong, will go wrong — if you leave a trap behind someone will walk into it. Let’s not do that. When writing Go, here’s what I do to leave no such trap behind and prevent the logging of secrets.</p><p>Let’s say you have a sign up request like so:</p><pre>type CreateUserRequest struct {<br>    Credentials Credentials `json:”credentials”`<br>}</pre><pre>type Credentials struct {<br>    Email string `json:”email”`<br>    Password string `json:”password”`<br>}</pre><p>And let’s say you’re logging to JSON for Elasticsearch:</p><pre>// logger we’re using<br>logger := log.NewJSONLogger(os.Stdout)</pre><pre>// request we decoded<br>request := CreateUserRequest{<br>    Credentials: Credentials{<br>        Email: “<a href="mailto:bilbro@theshire.net">bilbro@theshire.net</a>”,<br>        Password: “theonering”,<br>    },<br>}</pre><pre>// our call to log the request<br>logger.Log(“request”, request)</pre><pre>// the output<br>{“request”:{“credentials” {“email”:”<a href="mailto:bilbro@theshire.net">bilbro@theshire.net</a>”,”password”:”theonering”}}}</pre><p>The result is the user’s password is logged. Not good.</p><p>To solve the problem we’ll implement our own MarshalJSON that’ll redact the user’s password.</p><pre>func (co Credentials) MarshalJSON() ([]byte, error) {<br>    type credentials Credentials<br>    cn := credentials(co)<br>    cn.Password = &quot;[REDACTED]&quot;<br>    return json.Marshal((*credentials)(&amp;cn))<br>}</pre><p>Now when we log the same request the user’s password is not logged:</p><pre>// the output<br>{“request”:{“credentials”:{“email”:”<a href="mailto:bilbro@theshire.net">bilbro@theshire.net</a>”,”password”:”[REDACTED]”}}}</pre><p>There is now no possibility of logging the user’s password, regardless of who logs, nor where or when — at least if you’re logging JSON with this implementation. If you’re logging in another format, the same technique applies and there should be a corresponding marshal method for you to implement.</p><p>–</p><p>Please say hi at <a href="https://twitter.com/travisjeffery">@travisjeffery</a>.</p><p>Hit the 👏 and share if you found this useful.</p><p>Thanks for reading.</p><figure><a href="https://goo.gl/w4Pbea"><img alt="" src="https://cdn-images-1.medium.com/max/700/1*PZjwR1Nbluff5IMI6Y1T6g@2x.png" /></a></figure><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=a2294a9546ce" width="1" height="1"><hr><p><a href="https://hackernoon.com/keep-passwords-and-secrets-out-of-your-logs-with-go-a2294a9546ce">Keep passwords and secrets out of your logs with Go</a> was originally published in <a href="https://hackernoon.com">Hacker Noon</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Today I Learned: Storing Emoji to Mysql with Golang]]></title>
            <link>https://hackernoon.com/today-i-learned-storing-emoji-to-mysql-with-golang-204a093454b7?source=rss----3a8144eabfe3--software_development</link>
            <guid isPermaLink="false">https://medium.com/p/204a093454b7</guid>
            <category><![CDATA[golang]]></category>
            <category><![CDATA[software-development]]></category>
            <category><![CDATA[mysql]]></category>
            <category><![CDATA[emoji]]></category>
            <category><![CDATA[database]]></category>
            <dc:creator><![CDATA[Iman Tumorang]]></dc:creator>
            <pubDate>Mon, 04 Jun 2018 10:11:01 GMT</pubDate>
            <atom:updated>2018-06-04T10:43:27.069Z</atom:updated>
            <content:encoded><![CDATA[<h4>A simple and silly story, about our tiny bug today.</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*ELZJStuoVnqb-Y3duIrH0Q.png" /><figcaption>monocle emoji from google image search</figcaption></figure><p>Today, I with my team in <a href="http://kurio.co/article-feed">Kurio</a>, having a bit of funny moment but also silly thing. It’s happen when we trying to store emojis to our storage in Mysql through our new and simple CRUD API services.</p><p>We’re making an internal service that used by our content-team, just a simple CRUD. The stacks is just: Angular + Golang + Mysql.</p><p>The services already deployed to production and already used by our content-team. Everything is normal, because it’s already tested from staging until it’s released. Until, when one of our content-team started to store an item to this services, and the payload have a few of emojis. That’s when we realized this silly bug.</p><p>The payload is more look like this :</p><pre>{<br>        &quot;type&quot;: &quot;text&quot;,<br>        &quot;text&quot;: &quot;😈🤠 Lorem Ipsum Dolor sit Amet 😱&quot;,<br>        &quot;color&quot;: &quot;#FFFFFF&quot;<br>}</pre><p>And returning error about incorrect value to store.</p><pre>&quot;Number&quot;: 1366<br>&quot;Message&quot;: &quot;Incorrect string value: &#39;\\xF0\\x9F\\x98\\x88 \\xF0...&#39; for column &#39;text&#39; at row 1&quot;</pre><p>Luckily, this services is for internal use to our content-team, and the user load is not huge, so it’s still tolerable 😈. I can’t imagine what will happen if we released this to our real user.</p><h3>Solving The Issue</h3><p>To solve this issue, we do a few things related to this issue.</p><ul><li>Change the Database’s charset encoding and collation</li><li>Change the Connection Driver’s charset encoding and collation from our application(Golang) to Mysql Server</li></ul><h4>Change Database Encoding Charset and Collation</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/285/1*SUVbutxte_c_IcwzOc2HUQ.png" /><figcaption>our default charset before changed</figcaption></figure><p>We use Mysql 5.7 and using utf-8 as our charset. Which is not recommended after we fixing this issue.</p><p>So the solution is, we change our charset and collation to utf8mb4, because utf-8 in Mysql is not fully support all the utf-8 encoding generally. If we want a fully support all the utf-8 generally, we must use utf8mb4 .</p><p>To change the whole database’s charset and collation:</p><pre>ALTER DATABASE<br>    database_name<br>    CHARACTER SET = utf8mb4<br>    COLLATE = utf8mb4_unicode_ci;</pre><p>To change the whole a specific table’s charset and collation</p><pre>ALTER TABLE<br>    table_name<br>    CONVERT TO CHARACTER SET utf8mb4<br>    COLLATE utf8mb4_unicode_ci;</pre><p>So after making this, we think we have solve our problem. But, after test it again, we still don’t fixed it. It still returning the same error.</p><h4>Change Connection Charset in Mysql Driver</h4><p>After reading more article and some q/a in stackoverflow and other forums. It’s not only the database, we also need to change our connection’s driver charset and collation. Because this service that we developed, is built from Golang (1.10), and also we use <em>package</em> github.com/go-sql-driver/mysql as our driver, we just need to add some changes to our dsn.</p><p><strong>Before:</strong></p><pre>dsn := `root:root@tcp(127.0.0.1 :3306)/DB_NAME?parseTime=1&amp;loc=Asia%2FJakarta`</pre><pre>dbConn, _:= sql.Open(`mysql`, dsn)</pre><p><strong>After:</strong></p><pre>dsn :=`root:root@tcp(127.0.0.1 :3306)/DB_NAME?parseTime=1&amp;loc=Asia%2FJakarta<strong>&amp;charset=utf8mb4&amp;collation=utf8mb4_unicode_ci`</strong></pre><pre>dbConn, _:= sql.Open(`mysql`, dsn)</pre><p>Well, after doing this, now our service is running well, and can accept any emoji characters.</p><h4>Conclusions</h4><p>This bug is not too big, to be honest, it is a silly and funny bug. But it looks like everyone had ever fallen to this trap 😥. But today I learned something, that we should be careful when creating a database, regardless whatever its type (RDBMS, NoSQL)</p><p><strong>References:</strong></p><ol><li>Answer by Selvamani P in stackoverflow.com <a href="https://stackoverflow.com/a/39465494">https://stackoverflow.com/a/39465494</a></li><li>Answer by Mathias Bynens in dba.stackexchange.com<br><a href="https://dba.stackexchange.com/a/21684">https://dba.stackexchange.com/a/21684</a></li></ol><p><em>If you found this article useful, or interesting to read, please kindly share to your network circle, or you can just give claps to help other to reach this. If you have any question or something, just put a response below.</em></p><figure><a href="https://goo.gl/w4Pbea"><img alt="" src="https://cdn-images-1.medium.com/max/700/1*PZjwR1Nbluff5IMI6Y1T6g@2x.png" /></a></figure><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=204a093454b7" width="1" height="1"><hr><p><a href="https://hackernoon.com/today-i-learned-storing-emoji-to-mysql-with-golang-204a093454b7">Today I Learned: Storing Emoji to Mysql with Golang</a> was originally published in <a href="https://hackernoon.com">Hacker Noon</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[A Modern Icarus — the short story of Ariane 5 Flight 501]]></title>
            <link>https://hackernoon.com/crash-and-burn-a-short-story-of-ariane-5-flight-501-3a3c50e0e284?source=rss----3a8144eabfe3--software_development</link>
            <guid isPermaLink="false">https://medium.com/p/3a3c50e0e284</guid>
            <category><![CDATA[software-development]]></category>
            <category><![CDATA[tech-history]]></category>
            <category><![CDATA[quality-assurance]]></category>
            <category><![CDATA[project-management]]></category>
            <category><![CDATA[ariane-5-flight-501]]></category>
            <dc:creator><![CDATA[βishr τabbaa]]></dc:creator>
            <pubDate>Sun, 03 Jun 2018 20:05:42 GMT</pubDate>
            <atom:updated>2018-06-03T22:05:08.888Z</atom:updated>
            <content:encoded><![CDATA[<figure><img alt="" src="https://cdn-images-1.medium.com/max/668/1*Ft9r29SRXJ4llbRoPgwA3g.jpeg" /><figcaption>Ariane 5 Flight 501 @ T + 3 seconds</figcaption></figure><p>The 22nd anniversary of <strong>Ariane 5 Flight 501</strong> offers an opportunity to reflect upon software defects, project errors, and the best principles and practices for solution delivery in the IT industry. In this blog and my upcoming book, <strong>Bugs: A Short History of Software Imperfection</strong>, I will chronicle some important failures in the past, explain how we arrived at the present, and discuss some ideas for improving the future of software quality. As information technology becomes increasingly woven into Life, the quality of software impacts our commerce, health, infrastructure, military, politics, science, security, and transportation. The <strong>Big Idea</strong> is that we have no choice but to get better at delivering technology solutions because we have to.</p><p>On June 4, 1996 in Kourou, French Guiana, the maiden flight 501 of the Ariane 5 rocket ended almost as soon as it began. About 37 seconds after the initial launch sequence (30 seconds after takeoff), at an altitude of 4000 meters, the rocket deviated 90 degrees from its intended flight path due to a software failure, experienced severe aerodynamic stress tearing its boosters from the main stage, and thereby triggered a controlled self-destruction that culminated in the spacecraft exploding in a fireball of liquid hydrogen.</p><p>The European Space Agency (<strong>ESA</strong>) had ambitions to take a leadership role in the commercial space business and surpass Japan, Russia, and the USA. The Ariane 4 (A4) had been in service for more than 20 years and boasted an excellent record of more than 100 successful launches with no failures. The new Ariane 5 (A5) rocket would carry larger satellite payloads than earlier versions, and flight 501 was carrying a payload of four satellites intended for researching the Earth’s magnetosphere. ESA had spent 10 years and $7 billion developing the A5, and flight 501 itself cost $370 million. The success of the Ariane 4 and ESA budget pressures resulted in the reuse of A4 software by the A5 program team including its navigation system and flight path optimization libraries.</p><p>ESA organized an inquiry board immediately after the crash to investigate the disaster and using flight data, optical observations (IR camera, film), inspection of recovered material, and review of the software code, the board identified the following sequence of events that resulted in the crash.</p><ul><li>At T + 37 seconds, the Internal Reference System (<strong>SRI</strong>) that measured the rocket’s spatial attitude (altitude, motion, and position) sent incorrect data to the Flight Control System instead of the actual flight data because an <em>arithmetic overflow occurred inside its alignment function when a 64-bit floating point number for the Horizontal Basis variable (BH) could not be cast and converted to a signed 16-bit integer</em>. <em>The SRI in the A5 was reused as a black box from the A4</em>. Furthermore, the BH value was higher than expected because the early part of the A5 trajectory differed from the A4 and resulted in higher horizontal velocity values (five times as much). This error did not occur earlier in the flight because the vehicle speed was lower and the calculated values were small enough to fit into the program’s data types. <em>Since there was no exception handling in the Ada code for this alignment function</em>, the operand error bubbled up and the SRI component entered a failed state and returned a diagnostic value, intended for debugging purposes only.</li><li>The backup SRI, identical in hardware and software to the active SRI, could not be activated because it had failed for the same reason.</li><li>At T + 38 seconds, the On-Board Computer that executed the flight program then commanded course corrections as a result of the incorrect SRI data, and the rocket’s nozzles were deflected changing the flight path at an extreme angle.</li><li>At T + 39 seconds, high aerodynamic forces led to separation of the boosters from the main stage and triggered the self-destruct subsystem.</li></ul><figure><img alt="" src="https://cdn-images-1.medium.com/max/474/1*4Oedorc53ecHu1Fwb8X3Vw.jpeg" /><figcaption>Ariane 5 Flight 501 @ T+ 39 seconds</figcaption></figure><p>The inquiry board further analyzed the SRI software and overall A5 program and arrived at several conclusions:</p><ul><li>The SRI alignment function was used to perform ground-based alignment of the inertial platform prior to lift-off (around T-3 seconds) and <em>once the rocket took off the alignment function would not serve a purpose</em>. It was left running in the A5 for the first 50 seconds as a “special feature” in case the system needed to be restarted in the event of a brief pause in the countdown before lift off; such resets could take hours in the A4 and this would speed up the process.</li><li>The SRI code had been analyzed for exceptions by the A4 team, and seven variables were deemed at risk of operand error. Since a maximum SRI CPU utilization target of 80% had been set for the A4, only four variables were protected and three were left unprotected, including the BH variable. The original reason given for this decision was that “they were physically limited or there was a large margin of safety.” However, <em>the CPU constraint only applied to the A4 — </em><strong><em>not </em></strong><em>the A5, </em><strong><em>and </em></strong><em>the SRI code was never re-analyzed by the A5 team using realistic A5 input data.</em></li><li>The operand error in the SRI was not sufficient for system failure. The <em>specification and design of the SRI exception handling mechanism also contributed to the failure</em>. In the event of any exception, the system specification stated the failure should be indicated on the data bus, the failure context should stored in an EEPROM memory, and finally <em>the SRI processor should be shut down</em>. The reason behind this acute action was the engineering culture within the Ariane program focused on hardware failure instead of software failures since the former occurred more often than the latter. A rational approach to handling random hardware failures is to shutdown active systems and switch to the backup. However, a better approach in this software fault scenario would have been to provide best-effort estimates of the required altitude, position, and velocity. The inquiry board wrote that “software should be assumed faulty until applying the currently accepted best practice methods can demonstrate that it is correct.”</li><li>While there was some unit testing and integration testing with A4 data, <em>neither end-to-end, integration testing with hardware and software nor test simulations with realistic data from the A5 trajectory data were ever performed</em>. Post-501 flight simulations running the SRI software in the context of actual 501 trajectory data reproduced the chain of events leading to the SRI failure.</li></ul><p>The inquiry board made a number of recommendations, and they can be generalized into lessons learned from this case study that are useful to IT professionals.</p><ul><li>Don’t run code or systems that you don’t need (R1). The SRI alignment function should have been switched off after lift-off. This <strong>Devops </strong>mistake is avoidable, easy to correct, and happens too often (think Knight Capital).</li><li><strong>Quality Assurance</strong> matters (R2, R10, R11). If you don’t test the system end-to-end with high coverage of realistic positive and negative scenarios, then your product and project expectations are dreams — not empirically grounded hypotheses.</li><li>The smallest code <strong>Quality </strong>details matter whether its Ada, C, JavaScript, SQL, or Python (R4). An arithmetic conversion error caused the loss of a multi-million dollar spacecraft and set back a multi-billion dollar program for several years. In our own projects and systems, we must see the forest <em>and </em>the trees.</li><li>The system <strong>Complexity </strong>matters. One should carefully consider what components are critical, understand their fault surfaces, and avoid single points of failure (R6, R8, R13). Reusing someone else’s software artifacts just because it worked for them is not sufficient for your success. We need to examine the software’s assertions (think design by contract), inspect its tests, question assumptions, and think through dependencies. As an aside, one good example of quality transparency is APC; when you purchase a power supply unit it comes with the the unit test output from the factory.</li><li><strong>Culture </strong>matters and can sometimes eat strategy for breakfast as well as your technology project (R14). Besides a design bias to mitigating failure through shutdown and backup failover, there were QA shortcuts taken, aggressive borrowing of A4 code, and there was no single point of accountability on the A5 team. The ESA held no one responsible for the failure — a classic tragedy of the commons.</li></ul><p>The failure of the 501 highlighted risks with complex, costly computing systems to the general public, politicians, and business executives. It resulted in increased support for research on ensuring reliability of safety-critical systems. Automated analysis of the Ariane code written in Ada was one of the first examples of large scale static code analysis.</p><p>Afterwards, four replacement Cluster satellites were built and launched in pairs aboard Soyuz-U/Fregat rockets in 2000. The Ariane 5 program resumed, had dozens of successful launches and hundreds of satellite deployments, and is still active. The successor vehicle, the Ariane 6, is under development and there are plans to enter it into service in the 2020&#39;s.</p><p><strong>References</strong></p><ul><li><a href="http://esamultimedia.esa.int/docs/esa-x-1819eng.pdf">http://esamultimedia.esa.int/docs/esa-x-1819eng.pdf</a></li><li><a href="http://sunnyday.mit.edu/accidents/Ariane5accidentreport.html">http://sunnyday.mit.edu/accidents/Ariane5accidentreport.html</a></li><li><a href="https://www.nytimes.com/1996/12/01/magazine/little-bug-big-bang.html">https://www.nytimes.com/1996/12/01/magazine/little-bug-big-bang.html</a></li><li><a href="https://www.youtube.com/watch?v=gp_D8r-2hwk">https://www.youtube.com/watch?v=gp_D8r-2hwk</a> (video of 501 crash)</li><li><a href="https://blog.bugsnag.com/bug-day-ariane-5-disaster/">https://blog.bugsnag.com/bug-day-ariane-5-disaster/</a></li><li><a href="http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&amp;arnumber=589224">http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&amp;arnumber=589224</a></li><li><a href="http://iansommerville.com/software-engineering-book/case-studies/ariane5/">http://iansommerville.com/software-engineering-book/case-studies/ariane5/</a></li></ul><figure><a href="https://goo.gl/w4Pbea"><img alt="" src="https://cdn-images-1.medium.com/max/700/1*PZjwR1Nbluff5IMI6Y1T6g@2x.png" /></a></figure><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=3a3c50e0e284" width="1" height="1"><hr><p><a href="https://hackernoon.com/crash-and-burn-a-short-story-of-ariane-5-flight-501-3a3c50e0e284">A Modern Icarus — the short story of Ariane 5 Flight 501</a> was originally published in <a href="https://hackernoon.com">Hacker Noon</a> on Medium, where people are continuing the conversation by highlighting and responding to this story.</p>]]></content:encoded>
        </item>
    </channel>
</rss>